"""
This type stub file was generated by pyright.
"""

from torch import nn

class ModuleProxyWrapper(nn.Module):
    """
    Wrap a DistributedDataParallel module and forward requests for missing
    attributes to the module wrapped by DDP (the twice-wrapped module).
    Also forward calls to :func:`state_dict` and :func:`load_state_dict`.

    Usage::

        module.xyz = "hello world"
        wrapped_module = DistributedDataParallel(module, **ddp_args)
        wrapped_module = ModuleProxyWrapper(wrapped_module)
        assert wrapped_module.xyz == "hello world"
        assert wrapped_module.state_dict().keys() == module.state_dict().keys()

    Args:
        module (nn.Module): module to wrap
    """
    def __init__(self, module: nn.Module) -> None:
        ...
    
    def __getattr__(self, name): # -> Tensor | Module | Any:
        """Forward missing attributes to twice-wrapped module."""
        ...
    
    def state_dict(self, *args, **kwargs):
        """Forward to the twice-wrapped module."""
        ...
    
    def load_state_dict(self, *args, **kwargs): # -> _IncompatibleKeys:
        """Forward to the twice-wrapped module."""
        ...
    
    def forward(self, *args, **kwargs): # -> Any:
        ...
    


