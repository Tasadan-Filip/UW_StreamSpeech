"""
This type stub file was generated by pyright.
"""

from fairseq.tasks import LegacyFairseqTask, register_task

logger = ...
@register_task("denoising")
class DenoisingTask(LegacyFairseqTask):
    """
    Denoising task for applying sequence to sequence denoising. (ie. BART)
    """
    @staticmethod
    def add_args(parser): # -> None:
        """Add task-specific arguments to the parser."""
        ...
    
    def __init__(self, args, dictionary) -> None:
        ...
    
    @classmethod
    def setup_task(cls, args, **kwargs): # -> Self:
        """Setup the task."""
        ...
    
    def load_dataset(self, split, epoch=..., combine=..., **kwargs): # -> None:
        """Load a given dataset split.

        Args:
            split (str): name of the split (e.g., train, valid, test)
        """
        ...
    
    def build_dataset_for_inference(self, src_tokens, src_lengths, **kwargs): # -> NestedDictionaryDataset:
        """
        Generate batches for inference. We assume that the input begins with a
        bos symbol (`<s>`) and ends with an eos symbol (`</s>`).
        """
        ...
    
    def max_positions(self): # -> tuple[Any, Any]:
        """Return the max sentence length allowed by the task."""
        ...
    
    @property
    def source_dictionary(self): # -> Any:
        """Return the source :class:`~fairseq.data.Dictionary`."""
        ...
    
    @property
    def target_dictionary(self): # -> Any:
        """Return the target :class:`~fairseq.data.Dictionary`."""
        ...
    


