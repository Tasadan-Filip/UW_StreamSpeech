"""
This type stub file was generated by pyright.
"""

from dataclasses import dataclass
from fairseq.tasks import register_task
from fairseq.tasks.translation import TranslationConfig, TranslationTask

NOISE_CHOICES = ...
@dataclass
class TranslationLevenshteinConfig(TranslationConfig):
    noise: NOISE_CHOICES = ...


@register_task("translation_lev", dataclass=TranslationLevenshteinConfig)
class TranslationLevenshteinTask(TranslationTask):
    """
    Translation (Sequence Generation) task for Levenshtein Transformer
    See `"Levenshtein Transformer" <https://arxiv.org/abs/1905.11006>`_.
    """
    cfg: TranslationLevenshteinConfig
    def load_dataset(self, split, epoch=..., combine=..., **kwargs): # -> None:
        """Load a given dataset split.

        Args:
            split (str): name of the split (e.g., train, valid, test)
        """
        ...
    
    def inject_noise(self, target_tokens):
        ...
    
    def build_generator(self, models, args, **unused): # -> IterativeRefinementGenerator:
        ...
    
    def build_dataset_for_inference(self, src_tokens, src_lengths, constraints=...): # -> LanguagePairDataset:
        ...
    
    def train_step(self, sample, model, criterion, optimizer, update_num, ignore_grad=...): # -> tuple[Any, Any, Any]:
        ...
    
    def valid_step(self, sample, model, criterion): # -> tuple[Any, Any, Any]:
        ...
    


