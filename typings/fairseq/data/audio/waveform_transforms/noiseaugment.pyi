"""
This type stub file was generated by pyright.
"""

from fairseq.data.audio.waveform_transforms import AudioWaveformTransform, register_audio_waveform_transform

SNR_MIN = ...
SNR_MAX = ...
RATE = ...
NOISE_RATE = ...
NOISE_LEN_MEAN = ...
NOISE_LEN_STD = ...
class NoiseAugmentTransform(AudioWaveformTransform):
    @classmethod
    def from_config_dict(cls, config=...): # -> Self:
        ...
    
    def __init__(self, samples_path: str, snr_min: float = ..., snr_max: float = ..., rate: float = ...) -> None:
        ...
    
    def __repr__(self): # -> str:
        ...
    
    def pick_sample(self, goal_shape, always_2d=..., use_sample_rate=...): # -> NDArray[float64] | ndarray[Any, dtype[Any]]:
        ...
    
    def __call__(self, source, sample_rate): # -> tuple[Any, Any]:
        ...
    


@register_audio_waveform_transform("musicaugment")
class MusicAugmentTransform(NoiseAugmentTransform):
    ...


@register_audio_waveform_transform("backgroundnoiseaugment")
class BackgroundNoiseAugmentTransform(NoiseAugmentTransform):
    ...


@register_audio_waveform_transform("babbleaugment")
class BabbleAugmentTransform(NoiseAugmentTransform):
    ...


@register_audio_waveform_transform("sporadicnoiseaugment")
class SporadicNoiseAugmentTransform(NoiseAugmentTransform):
    @classmethod
    def from_config_dict(cls, config=...): # -> Self:
        ...
    
    def __init__(self, samples_path: str, snr_min: float = ..., snr_max: float = ..., rate: float = ..., noise_rate: float = ..., noise_len_mean: float = ..., noise_len_std: float = ...) -> None:
        ...
    


