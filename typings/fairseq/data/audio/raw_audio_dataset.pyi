"""
This type stub file was generated by pyright.
"""

from .. import FairseqDataset

logger = ...
class RawAudioDataset(FairseqDataset):
    def __init__(self, sample_rate, max_sample_size=..., min_sample_size=..., shuffle=..., pad=..., normalize=..., compute_mask_indices=..., **mask_compute_kwargs) -> None:
        ...
    
    def __getitem__(self, index):
        ...
    
    def __len__(self): # -> int:
        ...
    
    def postprocess(self, feats, curr_sample_rate): # -> Tensor:
        ...
    
    def crop_to_max_size(self, wav, target_size):
        ...
    
    def collater(self, samples): # -> dict[Any, Any] | dict[str, LongTensor]:
        ...
    
    def num_tokens(self, index): # -> int:
        ...
    
    def size(self, index): # -> int:
        """Return an example's size as a float or tuple. This value is used when
        filtering a dataset with ``--max-positions``."""
        ...
    
    def ordered_indices(self): # -> Any | NDArray[signedinteger[Any]]:
        """Return an ordered list of indices. Batches will be constructed based
        on this order."""
        ...
    
    def set_bucket_info(self, num_buckets): # -> None:
        ...
    


class FileAudioDataset(RawAudioDataset):
    def __init__(self, manifest_path, sample_rate, max_sample_size=..., min_sample_size=..., shuffle=..., pad=..., normalize=..., num_buckets=..., compute_mask_indices=..., text_compression_level=..., **mask_compute_kwargs) -> None:
        ...
    
    def __getitem__(self, index): # -> dict[str, Any | Tensor]:
        ...
    


class BinarizedAudioDataset(RawAudioDataset):
    def __init__(self, data_dir, split, sample_rate, max_sample_size=..., min_sample_size=..., shuffle=..., pad=..., normalize=..., num_buckets=..., compute_mask_indices=..., **mask_compute_kwargs) -> None:
        ...
    
    def __getitem__(self, index): # -> dict[str, Any | Tensor]:
        ...
    


