"""
This type stub file was generated by pyright.
"""

import torch
from typing import Any, Dict, List, Optional
from dataclasses import dataclass
from fairseq.data.audio.speech_to_text_dataset import S2TDataConfig, SpeechToTextDataset, SpeechToTextDatasetCreator
from fairseq.data import Dictionary

@dataclass
class TextToSpeechDatasetItem:
    index: int
    source: torch.Tensor
    target: Optional[torch.Tensor] = ...
    speaker_id: Optional[int] = ...
    duration: Optional[torch.Tensor] = ...
    pitch: Optional[torch.Tensor] = ...
    energy: Optional[torch.Tensor] = ...


class TextToSpeechDataset(SpeechToTextDataset):
    def __init__(self, split: str, is_train_split: bool, cfg: S2TDataConfig, audio_paths: List[str], n_frames: List[int], src_texts: Optional[List[str]] = ..., tgt_texts: Optional[List[str]] = ..., speakers: Optional[List[str]] = ..., src_langs: Optional[List[str]] = ..., tgt_langs: Optional[List[str]] = ..., ids: Optional[List[str]] = ..., tgt_dict: Optional[Dictionary] = ..., pre_tokenizer=..., bpe_tokenizer=..., n_frames_per_step=..., speaker_to_id=..., durations: Optional[List[List[int]]] = ..., pitches: Optional[List[str]] = ..., energies: Optional[List[str]] = ...) -> None:
        ...
    
    def __getitem__(self, index: int) -> TextToSpeechDatasetItem:
        ...
    
    def collater(self, samples: List[TextToSpeechDatasetItem]) -> Dict[str, Any]:
        ...
    


class TextToSpeechDatasetCreator(SpeechToTextDatasetCreator):
    KEY_DURATION = ...
    KEY_PITCH = ...
    KEY_ENERGY = ...


