"""
This type stub file was generated by pyright.
"""

from fairseq.data import FairseqDataset

class TokenBlockDataset(FairseqDataset):
    """Break a Dataset of tokens into blocks.

    Args:
        dataset (~torch.utils.data.Dataset): dataset to break into blocks
        sizes (List[int]): sentence lengths (required for 'complete' and 'eos')
        block_size (int): maximum block size (ignored in 'eos' break mode)
        break_mode (str, optional): Mode used for breaking tokens. Values can
            be one of:
            - 'none': break tokens into equally sized blocks (up to block_size)
            - 'complete': break tokens into blocks (up to block_size) such that
                blocks contains complete sentences, although block_size may be
                exceeded if some sentences exceed block_size
            - 'complete_doc': similar to 'complete' mode, but do not
                cross document boundaries
            - 'eos': each block contains one sentence (block_size is ignored)
        include_targets (bool, optional): return next tokens as targets
            (default: False).
        document_sep_len (int, optional): document separator size (required for
            'complete_doc' break mode). Typically 1 if the sentences have eos
            and 0 otherwise.
    """
    def __init__(self, dataset, sizes, block_size, pad, eos, break_mode=..., include_targets=..., document_sep_len=..., use_plasma_view=..., split_path=..., plasma_path=...) -> None:
        ...
    
    @property
    def slice_indices(self):
        ...
    
    @property
    def sizes(self): # -> ndarray[Any, Any]:
        ...
    
    @property
    def block_to_dataset_index(self):
        ...
    
    def attr(self, attr: str, index: int):
        ...
    
    def __getitem__(self, index): # -> tuple[Tensor, Tensor, Tensor] | Tensor:
        ...
    
    def __len__(self): # -> int:
        ...
    
    @property
    def supports_prefetch(self): # -> Any | bool:
        ...
    
    def prefetch(self, indices): # -> None:
        ...
    


