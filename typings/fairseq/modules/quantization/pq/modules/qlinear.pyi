"""
This type stub file was generated by pyright.
"""

import torch.nn as nn

class PQLinear(nn.Module):
    """
    Quantized counterpart of nn.Linear module. Stores the centroid, the assignments
    and the non-quantized biases. The full weight is re-instantiated at each forward
    pass.

    Args:
        - centroids: centroids of size n_centroids x block_size
        - assignments: assignments of the centroids to the subvectors
          of size self.out_features x n_blocks
        - bias: the non-quantized bias

    Remarks:
        - We refer the reader to the official documentation of the nn.Linear module
          for the other arguments and the behavior of the module
        - Performance tests on GPU show that this implementation is 15% slower than
          the non-quantized nn.Linear module for a standard training loop.
    """
    def __init__(self, centroids, assignments, bias, in_features, out_features) -> None:
        ...
    
    @property
    def weight(self): # -> Tensor:
        ...
    
    def forward(self, x): # -> Tensor:
        ...
    
    def extra_repr(self): # -> str:
        ...
    


