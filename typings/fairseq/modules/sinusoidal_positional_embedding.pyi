"""
This type stub file was generated by pyright.
"""

from typing import Any, Optional
from torch import Tensor, nn

class SinusoidalPositionalEmbedding(nn.Module):
    """This module produces sinusoidal positional embeddings of any length.

    Padding symbols are ignored.
    """
    def __init__(self, embedding_dim, padding_idx, init_size=...) -> None:
        ...
    
    def prepare_for_onnx_export_(self): # -> None:
        ...
    
    @staticmethod
    def get_embedding(num_embeddings: int, embedding_dim: int, padding_idx: Optional[int] = ...): # -> Tensor:
        """Build sinusoidal embeddings.

        This matches the implementation in tensor2tensor, but differs slightly
        from the description in Section 3.5 of "Attention Is All You Need".
        """
        ...
    
    def forward(self, input, incremental_state: Optional[Any] = ..., timestep: Optional[Tensor] = ..., positions: Optional[Any] = ...): # -> Tensor:
        """Input is expected to be of size [bsz x seqlen]."""
        ...
    


