"""
This type stub file was generated by pyright.
"""

from fairseq.models import register_model, register_model_architecture
from fairseq.models.speech_to_speech.s2s_conformer import S2UTConformerModel

logger = ...
def multitask_text_transformer_decoder_arch(args, decoder_layers, decoder_embed_dim=..., decoder_attention_heads=...): # -> None:
    ...

@register_model("unity_conformer")
class UnityConformerModel(S2UTConformerModel):
    """
    Direct speech-to-speech translation model with Conformer encoder + MT Transformer decoder + Transformer discrete unit decoder
    """
    @staticmethod
    def add_args(parser): # -> None:
        ...
    
    @classmethod
    def build_multitask_decoder(cls, args, tgt_dict, in_dim, is_first_pass_decoder, decoder_layers, decoder_embed_dim, decoder_attention_heads): # -> TransformerDecoder | CTCDecoder:
        ...
    
    @classmethod
    def build_decoder(cls, args, tgt_dict, aug_attn=...): # -> TransformerUnitDecoder | AugTransformerUnitDecoder:
        ...
    
    @classmethod
    def build_model(cls, args, task): # -> Self:
        ...
    
    @classmethod
    def build_text_encoder(cls, args): # -> TransformerEncoderNoEmb:
        ...
    
    def forward(self, src_tokens, src_lengths, prev_output_tokens, prev_output_tokens_mt, tgt_speaker=..., return_all_hiddens=...): # -> Any:
        ...
    


@register_model_architecture(model_name="unity_conformer", arch_name="unity_conformer")
def unity_conformer_architecture_base(args): # -> None:
    ...

@register_model_architecture(model_name="unity_conformer", arch_name="s2ut_conformer_translatotron2")
def unity_conformer_architecture_base_legacy(args): # -> None:
    ...

