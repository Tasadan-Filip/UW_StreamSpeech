"""
This type stub file was generated by pyright.
"""

from fairseq.models import register_model, register_model_architecture
from fairseq.models.speech_to_speech.s2s_transformer import S2SpecTTransformerModel, S2UTTransformerModel
from fairseq.models.speech_to_text import S2TConformerEncoder

logger = ...
def build_s2s_conformer_encoder(args): # -> S2SConformerEncoder:
    ...

class S2SConformerEncoder(S2TConformerEncoder):
    """Based on S2T transformer encoder, with support
    to incorporate target speaker embedding."""
    def __init__(self, args) -> None:
        ...
    
    def forward(self, src_tokens, src_lengths, tgt_speaker=..., return_all_hiddens=...):
        ...
    


@register_model("s2ut_conformer")
class S2UTConformerModel(S2UTTransformerModel):
    """
    Direct speech-to-speech translation model with Conformer encoder + Transformer discrete unit decoder
    """
    @staticmethod
    def add_args(parser): # -> None:
        ...
    
    @classmethod
    def build_encoder(cls, args): # -> S2SConformerEncoder:
        ...
    


@register_model("s2spect_conformer")
class S2SpecTConformerModel(S2SpecTTransformerModel):
    """
    Direct speech-to-speech translation model with Conformer encoder + TTS Transformer decoder
    """
    @staticmethod
    def add_args(parser): # -> None:
        ...
    
    @classmethod
    def build_encoder(cls, args): # -> S2SConformerEncoder:
        ...
    


@register_model_architecture("s2ut_conformer", "s2ut_conformer")
def s2ut_conformer_architecture_base(args): # -> None:
    ...

@register_model_architecture("s2spect_conformer", "s2spect_conformer")
def s2spect_conformer_architecture_base(args): # -> None:
    ...

@register_model_architecture("s2spect_conformer", "s2spect_conformer_fisher")
def s2spect_architecture_fisher(args): # -> None:
    ...

